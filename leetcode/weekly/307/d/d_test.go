// Code generated by copypasta/template/leetcode/generator_test.go
package main

import (
	"github.com/EndlessCheng/codeforces-go/leetcode/testutil"
	testutil2 "github.com/EndlessCheng/codeforces-go/main/testutil"
	"sort"
	"testing"
)

func Test_d(t *testing.T) {
	targetCaseNum := 0
	if err := testutil.RunLeetCodeFuncWithFile(t, kSum, "d.txt", targetCaseNum); err != nil {
		t.Fatal(err)
	}
}
// https://leetcode.cn/contest/weekly-contest-307/problems/find-the-k-sum-of-an-array/

func TestCompareInf(t *testing.T) {
	testutil.DebugTLE = 0

	min := func(a, b int) int {
		if a > b {
			return b
		}
		return a
	}

	inputGenerator := func() (a []int,k int) {
		rg := testutil2.NewRandGenerator()
		n := rg.Int(4, 4)
		a = rg.IntSlice(n, -5, 5)
		k = rg.Int(1, min(1<<n, 1<<4))
		return
	}

	runAC := func(a []int,k int)  int64 {
		a = append([]int{}, a...)
		ans := 0
		sort.Sort(sort.Reverse(sort.IntSlice(a)))


		sum := make([]int, 1<<len(a))
		for i, v := range a {
			for mask, bit := 0, 1<<i; mask < bit; mask++ {
				sv := sum[mask] + v
				sum[bit|mask] = sv
			}
		}
		sort.Sort(sort.Reverse(sort.IntSlice(sum)))
		ans = sum[k-1]

		return int64(ans)
	}

	// test examples first
	//if err := testutil.RunLeetCodeFuncWithFile(t, runAC, "d.txt", 0); err != nil {
	//	t.Fatal(err)
	//}
	//return

	testutil.CompareInf(t, inputGenerator, runAC, kSum)
}

